/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.1 public/car/Car.gltf -t -r
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Cube001: THREE.Mesh;
		Cube001_1: THREE.Mesh;
		Cube001_2: THREE.Mesh;
		Cube001_3: THREE.Mesh;
		Cube001_4: THREE.Mesh;
		Cube001_5: THREE.Mesh;
		Cube001_6: THREE.Mesh;
		Cube001_7: THREE.Mesh;
		Cube001_8: THREE.Mesh;
		Cube001_9: THREE.Mesh;
		Cube001_10: THREE.Mesh;
		Cube001_11: THREE.Mesh;
		Circle008: THREE.Mesh;
		Circle008_1: THREE.Mesh;
		Circle008_2: THREE.Mesh;
		Circle001: THREE.Mesh;
		Circle001_1: THREE.Mesh;
		Circle001_2: THREE.Mesh;
		Circle002: THREE.Mesh;
		Circle002_1: THREE.Mesh;
		Circle002_2: THREE.Mesh;
		Circle003: THREE.Mesh;
		Circle003_1: THREE.Mesh;
		Circle003_2: THREE.Mesh;
	};
	materials: {
		Body: THREE.MeshStandardMaterial;
		line1: THREE.MeshStandardMaterial;
		line2: THREE.MeshStandardMaterial;
		Glass: THREE.MeshStandardMaterial;
		line3: THREE.MeshStandardMaterial;
		down: THREE.MeshStandardMaterial;
		hood: THREE.MeshStandardMaterial;
		['shroome.001']: THREE.MeshStandardMaterial;
		backlights1: THREE.MeshStandardMaterial;
		['backlights2.001']: THREE.MeshStandardMaterial;
		['frontlights.001']: THREE.MeshStandardMaterial;
		sidelights: THREE.MeshStandardMaterial;
		taire: THREE.MeshStandardMaterial;
		wheelshroome: THREE.MeshStandardMaterial;
		blackshroome: THREE.MeshStandardMaterial;
	};
};

export function Car(props: JSX.IntrinsicElements['group']) {
	// @ts-ignore
	const { nodes, materials } = useGLTF('car/Car.gltf') as GLTFResult;
	return (
		<group {...props} dispose={null}>
			<group scale={[0.61, 1, 1]}>
				<mesh geometry={nodes.Cube001.geometry} material={materials.Body} />
				<mesh geometry={nodes.Cube001_1.geometry} material={materials.line1} />
				<mesh geometry={nodes.Cube001_2.geometry} material={materials.line2} />
				<mesh geometry={nodes.Cube001_3.geometry} material={materials.Glass} />
				<mesh geometry={nodes.Cube001_4.geometry} material={materials.line3} />
				<mesh geometry={nodes.Cube001_5.geometry} material={materials.down} />
				<mesh geometry={nodes.Cube001_6.geometry} material={materials.hood} />
				<mesh geometry={nodes.Cube001_7.geometry} material={materials['shroome.001']} />
				<mesh geometry={nodes.Cube001_8.geometry} material={materials.backlights1} />
				<mesh geometry={nodes.Cube001_9.geometry} material={materials['backlights2.001']} />
				<mesh geometry={nodes.Cube001_10.geometry} material={materials['frontlights.001']} />
				<mesh geometry={nodes.Cube001_11.geometry} material={materials.sidelights} />
				<group position={[0.85, -0.05, 0.97]} scale={[0.17, 0.1, 0.1]}>
					<mesh geometry={nodes.Circle008.geometry} material={materials.taire} />
					<mesh geometry={nodes.Circle008_1.geometry} material={materials.wheelshroome} />
					<mesh geometry={nodes.Circle008_2.geometry} material={materials.blackshroome} />
				</group>
				<group position={[-0.85, -0.05, 0.97]} scale={[0.17, 0.1, 0.1]}>
					<mesh geometry={nodes.Circle001.geometry} material={materials.taire} />
					<mesh geometry={nodes.Circle001_1.geometry} material={materials.wheelshroome} />
					<mesh geometry={nodes.Circle001_2.geometry} material={materials.blackshroome} />
				</group>
				<group position={[0.85, -0.05, -0.93]} scale={[0.17, 0.1, 0.1]}>
					<mesh geometry={nodes.Circle002.geometry} material={materials.taire} />
					<mesh geometry={nodes.Circle002_1.geometry} material={materials.wheelshroome} />
					<mesh geometry={nodes.Circle002_2.geometry} material={materials.blackshroome} />
				</group>
				<group position={[-0.85, -0.05, -0.93]} scale={[0.17, 0.1, 0.1]}>
					<mesh geometry={nodes.Circle003.geometry} material={materials.taire} />
					<mesh geometry={nodes.Circle003_1.geometry} material={materials.wheelshroome} />
					<mesh geometry={nodes.Circle003_2.geometry} material={materials.blackshroome} />
				</group>
			</group>
		</group>
	);
}

useGLTF.preload('car/Car.gltf');
